version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./database/postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - mynetwork


  fastapi:
    platform: linux/x86_64
    build: server/.
    ports:
      - "8000:8000"
    restart: on-failure
    environment:
      SERVER_ELASTIC_CONNECTION: ${SERVER_ELASTIC_CONNECTION}
      SERVER_POSTGRES_CONNECTION: ${SERVER_POSTGRES_CONNECTION}
    volumes:
      - ./server/code/:/app/code/
    networks:
      - mynetwork

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - mynetwork

  kib01:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge